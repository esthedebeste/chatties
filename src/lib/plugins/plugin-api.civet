* as zod from zod
type { PluginContext, Plugin, Setting, Settings } from $types/plugin-api

export type { PluginContext, Plugin, Setting, Settings }

function _SBody<S extends Setting["type"]>(type: S)
	zod.object
		type: zod.literal(type)
		default: zod[type]()
		changed: zod.function().args(zod[type]()).optional()

export settingsVerifier := zod.record(
	zod.string().regex(/^[a-z-]+$/), // kebab-case
	zod
		.object(name: zod.string())
		.and(_SBody("string").or(_SBody("number")).or(_SBody("boolean")))
)

export pluginVerifier := zod
	.object(
		id: zod.string().regex(/^[a-z-]+$/)
		init: zod.function().optional()
		destroy: zod.function().optional()
		join: zod.function().optional()
		channelId: zod.function().optional()
		leave: zod.function().optional()
		message: zod.function().args().optional()
		autocomplete: zod.function().args().optional()
		settings: settingsVerifier.optional()
	)
	.strict()
